{"ast":null,"code":"import _toConsumableArray from\"/Users/paolamac/dev/React To Do List/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/paolamac/dev/React To Do List/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';function ToDoList(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),textInput=_useState2[0],updateValue=_useState2[1];// const [ strike, updateStrike ] = useState(false);\nvar _useState3=useState([// removed items to start with a clear list { value: 'item 1', checked: true },\n// { value: 'item 2', checked: false },\n]),_useState4=_slicedToArray(_useState3,2),list=_useState4[0],updateList=_useState4[1];return React.createElement(\"div\",null,React.createElement(\"h3\",null,\" Daily to Do List \"),React.createElement(\"p\",null,\" Add an item or activity filling the form. \"),React.createElement(\"p\",null,\" When finished, you can either tick the done or remove box.\"),React.createElement(\"form\",null,React.createElement(\"input\",{type:\"text\",className:\"text-box\",value:textInput,onChange:function onChange(event){return updateValue(event.target.value);}}),React.createElement(\"button\",{onClick:function onClick(e){e.preventDefault();updateList([].concat(_toConsumableArray(list),[{value:textInput,checked:false}]));updateValue('');}},\" add \")),React.createElement(\"ul\",null,list.map(function(item,index){return React.createElement(\"li\",null,React.createElement(\"span\",{className:item.checked&&\"lineThrough\"},item.value),React.createElement(\"input\",{type:\"checkbox\",className:\"box1\",checked:item.checked,onClick:function onClick(){updateList(list.map(function(currentItem,position){if(index===position){return{value:currentItem.value,checked:!currentItem.checked};}return currentItem;}));}}),React.createElement(\"input\",{type:\"checkbox\",className:\"box2\",onClick:function onClick(){return updateList(list.filter(function(_,i){return index!==i;}));}}));})));}export default ToDoList;{}/* <li> <span className={strike && \"lineThrough\"}> Item 1</span> <input type=\"checkbox\" className=\"box1\" checked={strike} onClick={() => {updateStrike(!strike)}}   /> <input type=\"checkbox\" className=\"box2\"/> </li>\n  <li>ITEM 2 <input type=\"checkbox\" className=\"box1\"/> <input type=\"checkbox\" className=\"box2\"/></li> */ // test","map":{"version":3,"sources":["/Users/paolamac/dev/React To Do List/src/toDoListGood.js"],"names":["React","useState","ToDoList","textInput","updateValue","list","updateList","event","target","value","e","preventDefault","checked","map","item","index","currentItem","position","filter","_","i"],"mappings":"sPAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,QAASC,CAAAA,QAAT,EAAoB,eACiBD,QAAQ,CAAC,EAAD,CADzB,wCACVE,SADU,eACCC,WADD,eAElB;AAFkB,eAGQH,QAAQ,CAAC,CAEjC;AACA;AAHiC,CAAD,CAHhB,yCAGXI,IAHW,eAGNC,UAHM,eAUpB,MACE,gCACA,mDADA,CAEA,2EAFA,CAGA,2FAHA,CAIA,gCACI,6BAAO,IAAI,CAAC,MAAZ,CAAoB,SAAS,CAAC,UAA9B,CAAyC,KAAK,CAAEH,SAAhD,CAA2D,QAAQ,CAAE,kBAACI,KAAD,QAAWH,CAAAA,WAAW,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAtB,EAArE,EADJ,CAEI,8BAAQ,OAAO,CAAE,iBAACC,CAAD,CAAO,CACtBA,CAAC,CAACC,cAAF,GACAL,UAAU,8BAAKD,IAAL,GAAW,CAAEI,KAAK,CAAEN,SAAT,CAAoBS,OAAO,CAAE,KAA7B,CAAX,GAAV,CAEAR,WAAW,CAAC,EAAD,CAAX,CACD,CALD,UAFJ,CAJA,CAcA,8BACCC,IAAI,CAACQ,GAAL,CACC,SAACC,IAAD,CAAOC,KAAP,QACE,+BACE,4BAAM,SAAS,CAAED,IAAI,CAACF,OAAL,EAAgB,aAAjC,EAAiDE,IAAI,CAACL,KAAtD,CADF,CAEE,6BAAO,IAAI,CAAC,UAAZ,CAAuB,SAAS,CAAC,MAAjC,CAAwC,OAAO,CAAEK,IAAI,CAACF,OAAtD,CAA+D,OAAO,CAAE,kBAAM,CAACN,UAAU,CAACD,IAAI,CAACQ,GAAL,CAAS,SAACG,WAAD,CAAcC,QAAd,CAA2B,CAC5H,GAAGF,KAAK,GAAKE,QAAb,CAAuB,CACrB,MAAO,CAACR,KAAK,CAAEO,WAAW,CAACP,KAApB,CAA2BG,OAAO,CAAE,CAACI,WAAW,CAACJ,OAAjD,CAAP,CACD,CACD,MAAOI,CAAAA,WAAP,CACD,CALyF,CAAD,CAAV,CAK3E,CALJ,EAFF,CASE,6BAAO,IAAI,CAAC,UAAZ,CAAuB,SAAS,CAAC,MAAjC,CAAwC,OAAO,CAAE,yBAAMV,CAAAA,UAAU,CAACD,IAAI,CAACa,MAAL,CAAY,SAACC,CAAD,CAAIC,CAAJ,QAAQL,CAAAA,KAAK,GAAKK,CAAlB,EAAZ,CAAD,CAAhB,EAAjD,EATF,CADF,EADD,CADD,CAdA,CADF,CAiCC,CACD,cAAelB,CAAAA,QAAf,CAEE,CACuG,CADtG;yGAGH","sourcesContent":["import React, { useState } from 'react';\n\nfunction ToDoList (){\n  const [ textInput, updateValue ] = useState('');\n  // const [ strike, updateStrike ] = useState(false);\n  const [list,updateList] = useState([\n\n    // removed items to start with a clear list { value: 'item 1', checked: true },\n    // { value: 'item 2', checked: false },\n    \n]);\n\nreturn (\n  <div>\n  <h3> Daily to Do List </h3>\n  <p> Add an item or activity filling the form. </p>\n  <p> When finished, you can either tick the done or remove box.</p>\n  <form>\n      <input type=\"text\"  className='text-box' value={textInput} onChange={(event) => updateValue(event.target.value)} />\n      <button onClick={(e) => {\n        e.preventDefault()\n        updateList([...list, { value: textInput, checked: false }])\n\n        updateValue('')\n      }\n      }> add </button>\n    </form>\n  <ul>\n  {list.map(\n    (item, index) => (\n      <li>\n        <span className={item.checked && \"lineThrough\"}>{item.value}</span> \n        <input type=\"checkbox\" className=\"box1\" checked={item.checked} onClick={() => {updateList(list.map((currentItem, position) => {\n          if(index === position) {\n            return {value: currentItem.value, checked: !currentItem.checked }\n          }\n          return currentItem\n        }))}}   />\n\n        <input type=\"checkbox\" className=\"box2\" onClick={() => updateList(list.filter((_, i)=>index !== i))}/>\n      </li>)\n  )}\n</ul>\n</div>\n)\n}\nexport default ToDoList\n\n  {/* <li> <span className={strike && \"lineThrough\"}> Item 1</span> <input type=\"checkbox\" className=\"box1\" checked={strike} onClick={() => {updateStrike(!strike)}}   /> <input type=\"checkbox\" className=\"box2\"/> </li>\n  <li>ITEM 2 <input type=\"checkbox\" className=\"box1\"/> <input type=\"checkbox\" className=\"box2\"/></li> */}\n  \n// test\n\n\n"]},"metadata":{},"sourceType":"module"}