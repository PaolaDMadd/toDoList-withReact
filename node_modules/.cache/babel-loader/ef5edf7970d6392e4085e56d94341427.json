{"ast":null,"code":"var _jsxFileName = \"/Users/paolamac/dev/React To Do List/src/toDoListGood.js\";\nimport React, { useState } from 'react';\n\nfunction ToDoList() {\n  const [textInput, updateValue] = useState('');\n  const [strike, updateStrike] = useState(false);\n  const [list, updateList] = useState([// removed items to start with a clear list { value: 'item 1', checked: true },\n    // { value: 'item 2', checked: false },\n  ]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \" Daily to Do List \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \" Add an item or activity filling the form. \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \" When finished, click on it to remove.\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: textInput,\n    onChange: event => updateValue(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: e => {\n      e.preventDefault();\n      updateList([...list, {\n        value: textInput,\n        checked: false\n      }]);\n      updateValue('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \" add \")), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, list.map((item, index) => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: item.checked && \"lineThrough\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, item.value), React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"box1\",\n    checked: item.checked,\n    onClick: () => {\n      updateList(list.map((currentItem, position) => {\n        if (index === position) {\n          return {\n            value: currentItem.value,\n            checked: !currentItem.checked\n          };\n        }\n\n        return currentItem;\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"box2\",\n    onClick: () => updateList(list.filter((_, i) => index !== i)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })))));\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/Users/paolamac/dev/React To Do List/src/toDoListGood.js"],"names":["React","useState","ToDoList","textInput","updateValue","strike","updateStrike","list","updateList","event","target","value","e","preventDefault","checked","map","item","index","currentItem","position","filter","_","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM,CAAEC,SAAF,EAAaC,WAAb,IAA6BH,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAAEI,MAAF,EAAUC,YAAV,IAA2BL,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACM,IAAD,EAAMC,UAAN,IAAoBP,QAAQ,CAAC,CAEjC;AACA;AAHiC,GAAD,CAAlC;AAOF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEE,SAA1B;AAAqC,IAAA,QAAQ,EAAGM,KAAD,IAAWL,WAAW,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAGC,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACAL,MAAAA,UAAU,CAAC,CAAC,GAAGD,IAAJ,EAAU;AAAEI,QAAAA,KAAK,EAAER,SAAT;AAAoBW,QAAAA,OAAO,EAAE;AAA7B,OAAV,CAAD,CAAV;AAEAV,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CAJA,EAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCG,IAAI,CAACQ,GAAL,CACC,CAACC,IAAD,EAAOC,KAAP,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAED,IAAI,CAACF,OAAL,IAAgB,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDE,IAAI,CAACL,KAAtD,CADF,EAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAC,MAAjC;AAAwC,IAAA,OAAO,EAAEK,IAAI,CAACF,OAAtD;AAA+D,IAAA,OAAO,EAAE,MAAM;AAACN,MAAAA,UAAU,CAACD,IAAI,CAACQ,GAAL,CAAS,CAACG,WAAD,EAAcC,QAAd,KAA2B;AAC5H,YAAGF,KAAK,KAAKE,QAAb,EAAuB;AACrB,iBAAO;AAACR,YAAAA,KAAK,EAAEO,WAAW,CAACP,KAApB;AAA2BG,YAAAA,OAAO,EAAE,CAACI,WAAW,CAACJ;AAAjD,WAAP;AACD;;AACD,eAAOI,WAAP;AACD,OALyF,CAAD,CAAV;AAK3E,KALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAC,MAAjC;AAAwC,IAAA,OAAO,EAAE,MAAMV,UAAU,CAACD,IAAI,CAACa,MAAL,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAQL,KAAK,KAAKK,CAA9B,CAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAFH,CADD,CAdA,CADF;AAsCC;;AACD,eAAepB,QAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction ToDoList (){\n  const [ textInput, updateValue ] = useState('');\n  const [ strike, updateStrike ] = useState(false);\n  const [list,updateList] = useState([\n\n    // removed items to start with a clear list { value: 'item 1', checked: true },\n    // { value: 'item 2', checked: false },\n    \n]);\n\nreturn (\n  <div>\n  <h3> Daily to Do List </h3>\n  <p> Add an item or activity filling the form. </p>\n  <p> When finished, click on it to remove.</p>\n  <form>\n      <input type=\"text\" value={textInput} onChange={(event) => updateValue(event.target.value)} />\n      <button onClick={(e) => {\n        e.preventDefault()\n        updateList([...list, { value: textInput, checked: false }])\n\n        updateValue('')\n      }\n      }> add </button>\n    </form>\n  <ul>\n  {list.map(\n    (item, index) => (\n      <li>\n        <span className={item.checked && \"lineThrough\"}>{item.value}</span> \n        <input type=\"checkbox\" className=\"box1\" checked={item.checked} onClick={() => {updateList(list.map((currentItem, position) => {\n          if(index === position) {\n            return {value: currentItem.value, checked: !currentItem.checked }\n          }\n          return currentItem\n        }))}}   />\n\n        <input type=\"checkbox\" className=\"box2\" onClick={() => updateList(list.filter((_, i)=>index !== i))}/>\n      </li>)\n  )}\n\n\n  {/* <li> <span className={strike && \"lineThrough\"}> Item 1</span> <input type=\"checkbox\" className=\"box1\" checked={strike} onClick={() => {updateStrike(!strike)}}   /> <input type=\"checkbox\" className=\"box2\"/> </li>\n  <li>ITEM 2 <input type=\"checkbox\" className=\"box1\"/> <input type=\"checkbox\" className=\"box2\"/></li> */}\n  </ul>\n  </div>\n)\n\n}\nexport default ToDoList\n"]},"metadata":{},"sourceType":"module"}